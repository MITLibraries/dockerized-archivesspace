upstream app_api {
  server app:8089;
}

upstream app_oai {
  server app:8082;
}

upstream app_public {
  server app:8081;
}

upstream app_staff {
  server app:8080;
}

server {
  listen 443 ssl http2;
  server_name ${SERVERNAME:-example.com};
  ssl_certificate /etc/letsencrypt/fullchain-copy.pem;
  ssl_certificate_key /etc/letsencrypt/privkey-copy.pem;

  # Performance + Privacy improvements
  ssl_stapling on;
  ssl_stapling_verify on;
  ssl_trusted_certificate /etc/letsencrypt/fullchain-copy.pem;
  resolver 8.8.8.8 208.67.222.222 valid=300s;
  resolver_timeout 5s;

  # https://mozilla.github.io/server-side-tls/ssl-config-generator/
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 5m;
  ssl_dhparam /etc/nginx/dhparams.pem;

  # https://www.owasp.org/index.php/List_of_useful_HTTP_headers
  add_header Strict-Transport-Security "max-age=10886400";
  add_header X-Content-Type-Options "nosniff";
  add_header X-Frame-Options "SAMEORIGIN";
  add_header X-XSS-Protection "1; mode=block";


  location / {
    proxy_pass http://app_public;
  }

  location /oai {
    proxy_pass http://app_oai/;
  }

  location /staff/ {
    proxy_pass http://app_staff;
  }

  location /staff/api/ {
    proxy_pass http://app_api/;
  }
}

server {
    listen 80;
    server_name ${SERVERNAME:-example.com};

    location /.well-known/acme-challenge {
        default_type "text/plain";
        root /usr/share/nginx/html;
        try_files $uri =404;
    }

    location / {
        return 301 https://$server_name$request_uri;
    }
